#!/bin/sh
# pre-push hook - Fixed version

current_branch=$(git rev-parse --abbrev-ref HEAD)

# Block direct pushes to protected branches
case "$current_branch" in
    main|development)
        echo "❌ Direct push to $current_branch blocked!"
        echo "✅ Use Pull Request workflow"
        exit 1
        ;;
esac

# Get the branch this was created from - FIXED METHOD
parent=$(git reflog show --format="%gs" HEAD | grep "checkout: moving from" | head -1 | awk '{print $4}')

echo "🔍 Debug info:"
echo "  Current branch: $current_branch"
echo "  Detected parent: '$parent'"

# Validate branch pattern and parent
case "$current_branch" in
    hotfix/*)
        if [ "$parent" != "main" ]; then
            echo "❌ Hotfix must be from main, found: $parent"
            exit 1
        fi
        ;;
    feature/*|release/*)  
        if [ "$parent" != "development" ]; then
            echo "❌ Feature/Release must be from development, found: $parent"
            exit 1
        fi
        ;;
    *)
        echo "❌ Invalid branch name: $current_branch"
        echo "✅ Use: feature/*, hotfix/*, release/*"
        exit 1
        ;;
esac

echo "✅ Branch validation passed!"



echo "🔍 Checking lint..."
if [ -f "package.json" ] && grep -q '"lint"' package.json; then
    if npm run lint >/dev/null 2>&1; then
        echo "✅ Lint check passed!"
    else
        echo "❌ Lint check failed!"
        echo "🔧 Please fix lint errors:"
        echo "   npm run lint"
        echo "   # Fix any errors shown"
        echo "   # Then push again"
        echo ""
        echo "💡 If lint passes manually but hook still fails, use: git push --no-verify"
        exit 1
    fi
else
    echo "⚠️  No lint script found in package.json"
fi

echo "🎉 All validations passed! Push allowed."